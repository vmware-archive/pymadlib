{"name":"PyMADlib","tagline":"A Python wrapper for MADlib  - an open source library for scalable in-database machine learning algorithms","body":"A Python wrapper for MADlib - an open source library for scalable in-database machine learning algorithms\r\n\r\n## Algorithms\r\n\r\nPyMADlib currently has wrappers for the following algorithms in MADlib (version 0.5).\r\n\r\n1. Linear regression\r\n1. Logistic Regression\r\n1. SVM (regression & classification)\r\n1. K-Means \r\n1. LDA \r\n\r\nRefer [MADlib User Docs](https://madlib.apache.org/docs/v0.5/ ) for MADlib's user documentation. Please note that PyMADlib as of now is only compatible with MADlib v0.5. You can obtain MADlib v0.5 from [MADlib v0.5](https://github.com/madlib/madlib/archive/v0.5.tar.gz). We might add support to more recent versions of MADlib depending on adoption rate. Please email me if you have a strong case for an upgrade.\r\n\r\n\r\n## Dependencies\r\n\r\n1. You'll need the python extension _**psycopg2**_ to use PyMADlib.\r\n1. If you have matplotlib installed, you'll see Matplotlib visualizations for Linear Regression demo.\r\n1. If you have installed [networkx](https://networkx.github.com/download.html), you'll see a visualization of the k-means demo\r\n1. [PyROC](https://github.com/marcelcaraciolo/PyROC) is included in the source of this distribution with permission from its developer. You'll see a visualization of the ROC curves for Logistic Regression.\r\n\r\n\r\n\r\n \r\n\r\n## Configurations\r\n\r\nTo configure your DB Connection parameters\r\nYou should create a file in your home directory\r\n\r\n>     ~/.pymadlib.config \r\n\r\nthat should look like so :\r\n\r\n\r\n>     [db_connection]  \r\n>     user = gpadmin  \r\n>     password = XXXXX  \r\n>     hostname = 127.0.0.1 (or the IP of your DB server)  \r\n>     port = 5432 (the port# of your DB)  \r\n>     database = vatsandb (the database you wish to connect to)  \r\n\r\n\r\n\r\n\r\n\r\n\r\n## Installation Instructions\r\n\r\nPyMADlib depends on `MADlib`, `psycopg2` and `Pandas`. It is easiest to work with PyMADlib if you have `Anaconda Python`.\r\n\r\n## Build Environment Setup on Mac OS X 10.8\r\n\r\n* Download & install [Anaconda-1.9.0-MacOSX-x86_64.pkg] (https://repo.continuum.io/archive/Anaconda-1.9.0-MacOSX-x86_64.pkg)\r\n\r\n* Open a terminal and check if you have Anaconda Python & the package manager conda\r\n\r\n>     vatsan-mac$ which python\r\n>     /Users/vatsan/anaconda/bin/python\r\n>     vatsan-mac$ which conda\r\n>     /Users/vatsan/anaconda/bin/conda \r\n\r\n* If you haven't installed PostgreSQL on your Mac already, you'll have to download & install `PostGreSQL` for Mac. This is so that we get some required libraries to compile the SQL Engine: psycopg2. The easiest way to install `PostGreSQL` on Mac is via `https://postgresapp.com/`. Once you've downloaded and installed PostGreSQL on Mac, it should typically be found under `/Library/PostgreSQL`\r\n\r\n>     vatsan-mac$ ls /Library/PostgreSQL/9.2/\r\n>     Library include pg_env.sh uninstall-postgresql.app\r\n>     bin installer scripts\r\n>     data lib share\r\n>     doc pgAdmin3.app stackbuilder.app\r\nI don't think the version of the `PostGreSQL` matters (9.1 or above is fine). \r\n\r\n* You may need to create some symlinks to `libpq` & `libssl` so that `psycopg2` is able to find it:\r\n\r\n>     vatsan-mac$ sudo ln -s /Users/vatsan/anaconda/lib/libssl.1.0.0.dylib /usr/lib\r\n>     vatsan-mac$ sudo ln -s /Users/vatsan/anaconda/lib/libcrypto.1.0.0.dylib /usr/lib\r\n\r\n* Install `Psycopg2` \r\n\r\n>     vatsan-mac$ conda install distribute\r\n>     vatsan-mac$ pip install psycopg2\r\n\r\n* Now we're ready to test if the installations of the required libraries were successful.\r\n\r\n>     vatsan-mac$ python -c 'import psycopg2'\r\nIf the above command did not error out, then installation was successful.\r\n\r\n* You may install `PyMADlib` by downloading the source (from PyPI) and then run the following\r\n\r\n>     sudo python setup.py build\r\n>     sudo python setup.py install\r\n\r\n* If you use easy_install or pip, simply run :\r\n\r\n>     sudo easy_install pymadlib\r\n\r\n\r\n## Usage Tutorial\r\n\r\nVisit [PyMADlib Tutorial](https://nbviewer.ipython.org/gist/vatsan/dd88abb47c2fbd9e16bd) for a tutorial on using PyMADlib\r\nAlso visit [PyMADlib IPython NB](https://gist.github.com/vatsan/dd88abb47c2fbd9e16bd) to download the IPython NB tutorial\r\n\r\n\r\n## Running the Demos\r\n\r\nYou may run the demo from the extracted directory of pymadlib like so :\r\n\r\n>     python example.py\r\n\r\n        \r\nIf you installed PyMADlib using instructions in the previous section, then simply run\r\n\r\n>     python -c 'from pymadlib.example import runDemos; runDemos()'\r\n\r\nRemember to close the Matplotlib windows that pop-up to continue with the rest of the demo.\r\n\r\n\r\n\r\n\r\n## Gallery\r\n\r\n![K-Means Cluster Visualization](https://lh3.googleusercontent.com/-bXz3gCrnQFo/UTu3lXFKbeI/AAAAAAAAKgI/Hpjsqzb_GTQ/w776-h714-p-o-k/kmeans_networkx_viz.png)\r\n\r\n![Scatter Plot - Linear Regression (numeric attributes only)](https://lh3.googleusercontent.com/-esbS5NTl58E/UTu3lfBqUXI/AAAAAAAAKgE/tawiqnTgYLQ/w470-h353-o-k/linear_reg_scatter_1.png)\r\n\r\n![Scatter Plot - Linear Regression (with categorical attributes)](https://lh6.googleusercontent.com/-vNTw5Q6d0pg/UTu3lVjBIzI/AAAAAAAAKgA/pbiLfGiYisw/w470-h353-o-k/linear_reg_scatter_2.png)\r\n\r\n![ROC Curve - Logistic Regression](https://lh3.googleusercontent.com/-ymBoJ7qQo-o/UTu3l9RUBvI/AAAAAAAAKgU/_Mc0jiM_Yq0/w470-h353-o-k/logistic_reg_pyroc.png)\r\n\r\n![Random graph visualization - Networkx](https://lh6.googleusercontent.com/-H-3h0bV8EDQ/UTu3lyED9YI/AAAAAAAAKgY/CcoJ2oSme2M/s353-c-o-k/random_networkx_viz.png)\r\n\r\n \r\n\r\n\r\n## Datasets packaged with this installation\r\n\r\nPyMADlib packages publicly available datasets from the UCI machine learning repository and other sources.\r\n\r\n1. [Wine quality dataset from UCI Machine Learning repository](https://archive.ics.uci.edu/ml/datasets/Wine+Quality)\r\n1. [Auto MPG dataset from UCI ML repository from UCI Machine Learning repository](https://archive.ics.uci.edu/ml/datasets/Auto+MPG)\r\n1. [Wine quality dataset from UCI Machine Learning repository](https://archive.ics.uci.edu/ml/datasets/Wine+Quality)\r\n1. Obama-Romney second presidential debate (2012) transcripts\r\n\r\n\r\n\r\n\r\n## Questions\r\n\r\n<vatsan.cs@utexas.edu>\r\n","google":"UA-39168204-1","note":"Don't delete this file! It's used internally to help with page regeneration."}